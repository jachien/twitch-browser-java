// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: twitchbrowser.proto

package org.jchien.twitchbrowser.twitch;

public final class TwitchBrowserProtos {
  private TwitchBrowserProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StreamEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jchien.twitchbrowser.twitch.StreamEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 numViewers = 1;</code>
     */
    boolean hasNumViewers();
    /**
     * <code>optional int32 numViewers = 1;</code>
     */
    int getNumViewers();

    /**
     * <code>optional string channelStatus = 2;</code>
     */
    boolean hasChannelStatus();
    /**
     * <code>optional string channelStatus = 2;</code>
     */
    java.lang.String getChannelStatus();
    /**
     * <code>optional string channelStatus = 2;</code>
     */
    com.google.protobuf.ByteString
        getChannelStatusBytes();

    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    boolean hasChannelDisplayName();
    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    java.lang.String getChannelDisplayName();
    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannelDisplayNameBytes();

    /**
     * <code>optional string gameName = 4;</code>
     */
    boolean hasGameName();
    /**
     * <code>optional string gameName = 4;</code>
     */
    java.lang.String getGameName();
    /**
     * <code>optional string gameName = 4;</code>
     */
    com.google.protobuf.ByteString
        getGameNameBytes();

    /**
     * <code>optional string channelName = 5;</code>
     */
    boolean hasChannelName();
    /**
     * <code>optional string channelName = 5;</code>
     */
    java.lang.String getChannelName();
    /**
     * <code>optional string channelName = 5;</code>
     */
    com.google.protobuf.ByteString
        getChannelNameBytes();

    /**
     * <code>optional string channelUrl = 6;</code>
     */
    boolean hasChannelUrl();
    /**
     * <code>optional string channelUrl = 6;</code>
     */
    java.lang.String getChannelUrl();
    /**
     * <code>optional string channelUrl = 6;</code>
     */
    com.google.protobuf.ByteString
        getChannelUrlBytes();

    /**
     * <code>optional string previewUrl = 7;</code>
     */
    boolean hasPreviewUrl();
    /**
     * <code>optional string previewUrl = 7;</code>
     */
    java.lang.String getPreviewUrl();
    /**
     * <code>optional string previewUrl = 7;</code>
     */
    com.google.protobuf.ByteString
        getPreviewUrlBytes();
  }
  /**
   * Protobuf type {@code org.jchien.twitchbrowser.twitch.StreamEntry}
   */
  public static final class StreamEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.jchien.twitchbrowser.twitch.StreamEntry)
      StreamEntryOrBuilder {
    // Use StreamEntry.newBuilder() to construct.
    private StreamEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StreamEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StreamEntry defaultInstance;
    public static StreamEntry getDefaultInstance() {
      return defaultInstance;
    }

    public StreamEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StreamEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              numViewers_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              channelStatus_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              channelDisplayName_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              gameName_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              channelName_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              channelUrl_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              previewUrl_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.class, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<StreamEntry> PARSER =
        new com.google.protobuf.AbstractParser<StreamEntry>() {
      public StreamEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StreamEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NUMVIEWERS_FIELD_NUMBER = 1;
    private int numViewers_;
    /**
     * <code>optional int32 numViewers = 1;</code>
     */
    public boolean hasNumViewers() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 numViewers = 1;</code>
     */
    public int getNumViewers() {
      return numViewers_;
    }

    public static final int CHANNELSTATUS_FIELD_NUMBER = 2;
    private java.lang.Object channelStatus_;
    /**
     * <code>optional string channelStatus = 2;</code>
     */
    public boolean hasChannelStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string channelStatus = 2;</code>
     */
    public java.lang.String getChannelStatus() {
      java.lang.Object ref = channelStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channelStatus = 2;</code>
     */
    public com.google.protobuf.ByteString
        getChannelStatusBytes() {
      java.lang.Object ref = channelStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELDISPLAYNAME_FIELD_NUMBER = 3;
    private java.lang.Object channelDisplayName_;
    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    public boolean hasChannelDisplayName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    public java.lang.String getChannelDisplayName() {
      java.lang.Object ref = channelDisplayName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelDisplayName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channelDisplayName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannelDisplayNameBytes() {
      java.lang.Object ref = channelDisplayName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelDisplayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GAMENAME_FIELD_NUMBER = 4;
    private java.lang.Object gameName_;
    /**
     * <code>optional string gameName = 4;</code>
     */
    public boolean hasGameName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string gameName = 4;</code>
     */
    public java.lang.String getGameName() {
      java.lang.Object ref = gameName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gameName = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGameNameBytes() {
      java.lang.Object ref = gameName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELNAME_FIELD_NUMBER = 5;
    private java.lang.Object channelName_;
    /**
     * <code>optional string channelName = 5;</code>
     */
    public boolean hasChannelName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string channelName = 5;</code>
     */
    public java.lang.String getChannelName() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channelName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChannelNameBytes() {
      java.lang.Object ref = channelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELURL_FIELD_NUMBER = 6;
    private java.lang.Object channelUrl_;
    /**
     * <code>optional string channelUrl = 6;</code>
     */
    public boolean hasChannelUrl() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string channelUrl = 6;</code>
     */
    public java.lang.String getChannelUrl() {
      java.lang.Object ref = channelUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channelUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channelUrl = 6;</code>
     */
    public com.google.protobuf.ByteString
        getChannelUrlBytes() {
      java.lang.Object ref = channelUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channelUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREVIEWURL_FIELD_NUMBER = 7;
    private java.lang.Object previewUrl_;
    /**
     * <code>optional string previewUrl = 7;</code>
     */
    public boolean hasPreviewUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string previewUrl = 7;</code>
     */
    public java.lang.String getPreviewUrl() {
      java.lang.Object ref = previewUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          previewUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string previewUrl = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPreviewUrlBytes() {
      java.lang.Object ref = previewUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        previewUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      numViewers_ = 0;
      channelStatus_ = "";
      channelDisplayName_ = "";
      gameName_ = "";
      channelName_ = "";
      channelUrl_ = "";
      previewUrl_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, numViewers_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getChannelStatusBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getChannelDisplayNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getGameNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getChannelNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getChannelUrlBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getPreviewUrlBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numViewers_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getChannelStatusBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getChannelDisplayNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getGameNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getChannelNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getChannelUrlBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPreviewUrlBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jchien.twitchbrowser.twitch.StreamEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jchien.twitchbrowser.twitch.StreamEntry)
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.class, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder.class);
      }

      // Construct using org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        numViewers_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channelStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        channelDisplayName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        gameName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channelName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        channelUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        previewUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor;
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry getDefaultInstanceForType() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.getDefaultInstance();
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry build() {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry buildPartial() {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry result = new org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.numViewers_ = numViewers_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channelStatus_ = channelStatus_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelDisplayName_ = channelDisplayName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameName_ = gameName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channelName_ = channelName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channelUrl_ = channelUrl_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.previewUrl_ = previewUrl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry) {
          return mergeFrom((org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry other) {
        if (other == org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.getDefaultInstance()) return this;
        if (other.hasNumViewers()) {
          setNumViewers(other.getNumViewers());
        }
        if (other.hasChannelStatus()) {
          bitField0_ |= 0x00000002;
          channelStatus_ = other.channelStatus_;
          onChanged();
        }
        if (other.hasChannelDisplayName()) {
          bitField0_ |= 0x00000004;
          channelDisplayName_ = other.channelDisplayName_;
          onChanged();
        }
        if (other.hasGameName()) {
          bitField0_ |= 0x00000008;
          gameName_ = other.gameName_;
          onChanged();
        }
        if (other.hasChannelName()) {
          bitField0_ |= 0x00000010;
          channelName_ = other.channelName_;
          onChanged();
        }
        if (other.hasChannelUrl()) {
          bitField0_ |= 0x00000020;
          channelUrl_ = other.channelUrl_;
          onChanged();
        }
        if (other.hasPreviewUrl()) {
          bitField0_ |= 0x00000040;
          previewUrl_ = other.previewUrl_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int numViewers_ ;
      /**
       * <code>optional int32 numViewers = 1;</code>
       */
      public boolean hasNumViewers() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 numViewers = 1;</code>
       */
      public int getNumViewers() {
        return numViewers_;
      }
      /**
       * <code>optional int32 numViewers = 1;</code>
       */
      public Builder setNumViewers(int value) {
        bitField0_ |= 0x00000001;
        numViewers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numViewers = 1;</code>
       */
      public Builder clearNumViewers() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numViewers_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channelStatus_ = "";
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public boolean hasChannelStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public java.lang.String getChannelStatus() {
        java.lang.Object ref = channelStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelStatus_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public com.google.protobuf.ByteString
          getChannelStatusBytes() {
        java.lang.Object ref = channelStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public Builder setChannelStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channelStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public Builder clearChannelStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelStatus_ = getDefaultInstance().getChannelStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelStatus = 2;</code>
       */
      public Builder setChannelStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        channelStatus_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelDisplayName_ = "";
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public boolean hasChannelDisplayName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public java.lang.String getChannelDisplayName() {
        java.lang.Object ref = channelDisplayName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelDisplayName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannelDisplayNameBytes() {
        java.lang.Object ref = channelDisplayName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelDisplayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public Builder setChannelDisplayName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelDisplayName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public Builder clearChannelDisplayName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelDisplayName_ = getDefaultInstance().getChannelDisplayName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelDisplayName = 3;</code>
       */
      public Builder setChannelDisplayNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channelDisplayName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gameName_ = "";
      /**
       * <code>optional string gameName = 4;</code>
       */
      public boolean hasGameName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string gameName = 4;</code>
       */
      public java.lang.String getGameName() {
        java.lang.Object ref = gameName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gameName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gameName = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGameNameBytes() {
        java.lang.Object ref = gameName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gameName = 4;</code>
       */
      public Builder setGameName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gameName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gameName = 4;</code>
       */
      public Builder clearGameName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameName_ = getDefaultInstance().getGameName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gameName = 4;</code>
       */
      public Builder setGameNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gameName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelName_ = "";
      /**
       * <code>optional string channelName = 5;</code>
       */
      public boolean hasChannelName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string channelName = 5;</code>
       */
      public java.lang.String getChannelName() {
        java.lang.Object ref = channelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channelName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChannelNameBytes() {
        java.lang.Object ref = channelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channelName = 5;</code>
       */
      public Builder setChannelName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channelName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelName = 5;</code>
       */
      public Builder clearChannelName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channelName_ = getDefaultInstance().getChannelName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelName = 5;</code>
       */
      public Builder setChannelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channelName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object channelUrl_ = "";
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public boolean hasChannelUrl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public java.lang.String getChannelUrl() {
        java.lang.Object ref = channelUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            channelUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public com.google.protobuf.ByteString
          getChannelUrlBytes() {
        java.lang.Object ref = channelUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channelUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public Builder setChannelUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channelUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public Builder clearChannelUrl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channelUrl_ = getDefaultInstance().getChannelUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channelUrl = 6;</code>
       */
      public Builder setChannelUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        channelUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object previewUrl_ = "";
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public boolean hasPreviewUrl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public java.lang.String getPreviewUrl() {
        java.lang.Object ref = previewUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            previewUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public com.google.protobuf.ByteString
          getPreviewUrlBytes() {
        java.lang.Object ref = previewUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          previewUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public Builder setPreviewUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        previewUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public Builder clearPreviewUrl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        previewUrl_ = getDefaultInstance().getPreviewUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string previewUrl = 7;</code>
       */
      public Builder setPreviewUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        previewUrl_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jchien.twitchbrowser.twitch.StreamEntry)
    }

    static {
      defaultInstance = new StreamEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jchien.twitchbrowser.twitch.StreamEntry)
  }

  public interface CacheEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jchien.twitchbrowser.twitch.CacheEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> 
        getStreamList();
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry getStream(int index);
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    int getStreamCount();
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    java.util.List<? extends org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder> 
        getStreamOrBuilderList();
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder getStreamOrBuilder(
        int index);

    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code org.jchien.twitchbrowser.twitch.CacheEntry}
   */
  public static final class CacheEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.jchien.twitchbrowser.twitch.CacheEntry)
      CacheEntryOrBuilder {
    // Use CacheEntry.newBuilder() to construct.
    private CacheEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CacheEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CacheEntry defaultInstance;
    public static CacheEntry getDefaultInstance() {
      return defaultInstance;
    }

    public CacheEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CacheEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                stream_ = new java.util.ArrayList<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              stream_.add(input.readMessage(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          stream_ = java.util.Collections.unmodifiableList(stream_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.class, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<CacheEntry> PARSER =
        new com.google.protobuf.AbstractParser<CacheEntry>() {
      public CacheEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CacheEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CacheEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STREAM_FIELD_NUMBER = 1;
    private java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> stream_;
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    public java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> getStreamList() {
      return stream_;
    }
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    public java.util.List<? extends org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder> 
        getStreamOrBuilderList() {
      return stream_;
    }
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    public int getStreamCount() {
      return stream_.size();
    }
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry getStream(int index) {
      return stream_.get(index);
    }
    /**
     * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
     */
    public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder getStreamOrBuilder(
        int index) {
      return stream_.get(index);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      stream_ = java.util.Collections.emptyList();
      timestamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < stream_.size(); i++) {
        output.writeMessage(1, stream_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(2, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < stream_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, stream_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jchien.twitchbrowser.twitch.CacheEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jchien.twitchbrowser.twitch.CacheEntry)
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.class, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.Builder.class);
      }

      // Construct using org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStreamFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (streamBuilder_ == null) {
          stream_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          streamBuilder_.clear();
        }
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor;
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry getDefaultInstanceForType() {
        return org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.getDefaultInstance();
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry build() {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry buildPartial() {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry result = new org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (streamBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            stream_ = java.util.Collections.unmodifiableList(stream_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.stream_ = stream_;
        } else {
          result.stream_ = streamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry) {
          return mergeFrom((org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry other) {
        if (other == org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry.getDefaultInstance()) return this;
        if (streamBuilder_ == null) {
          if (!other.stream_.isEmpty()) {
            if (stream_.isEmpty()) {
              stream_ = other.stream_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStreamIsMutable();
              stream_.addAll(other.stream_);
            }
            onChanged();
          }
        } else {
          if (!other.stream_.isEmpty()) {
            if (streamBuilder_.isEmpty()) {
              streamBuilder_.dispose();
              streamBuilder_ = null;
              stream_ = other.stream_;
              bitField0_ = (bitField0_ & ~0x00000001);
              streamBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStreamFieldBuilder() : null;
            } else {
              streamBuilder_.addAllMessages(other.stream_);
            }
          }
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.CacheEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> stream_ =
        java.util.Collections.emptyList();
      private void ensureStreamIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          stream_ = new java.util.ArrayList<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry>(stream_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder> streamBuilder_;

      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> getStreamList() {
        if (streamBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stream_);
        } else {
          return streamBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public int getStreamCount() {
        if (streamBuilder_ == null) {
          return stream_.size();
        } else {
          return streamBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry getStream(int index) {
        if (streamBuilder_ == null) {
          return stream_.get(index);
        } else {
          return streamBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder setStream(
          int index, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry value) {
        if (streamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreamIsMutable();
          stream_.set(index, value);
          onChanged();
        } else {
          streamBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder setStream(
          int index, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder builderForValue) {
        if (streamBuilder_ == null) {
          ensureStreamIsMutable();
          stream_.set(index, builderForValue.build());
          onChanged();
        } else {
          streamBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder addStream(org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry value) {
        if (streamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreamIsMutable();
          stream_.add(value);
          onChanged();
        } else {
          streamBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder addStream(
          int index, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry value) {
        if (streamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreamIsMutable();
          stream_.add(index, value);
          onChanged();
        } else {
          streamBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder addStream(
          org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder builderForValue) {
        if (streamBuilder_ == null) {
          ensureStreamIsMutable();
          stream_.add(builderForValue.build());
          onChanged();
        } else {
          streamBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder addStream(
          int index, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder builderForValue) {
        if (streamBuilder_ == null) {
          ensureStreamIsMutable();
          stream_.add(index, builderForValue.build());
          onChanged();
        } else {
          streamBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder addAllStream(
          java.lang.Iterable<? extends org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry> values) {
        if (streamBuilder_ == null) {
          ensureStreamIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stream_);
          onChanged();
        } else {
          streamBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder clearStream() {
        if (streamBuilder_ == null) {
          stream_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          streamBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public Builder removeStream(int index) {
        if (streamBuilder_ == null) {
          ensureStreamIsMutable();
          stream_.remove(index);
          onChanged();
        } else {
          streamBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder getStreamBuilder(
          int index) {
        return getStreamFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder getStreamOrBuilder(
          int index) {
        if (streamBuilder_ == null) {
          return stream_.get(index);  } else {
          return streamBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public java.util.List<? extends org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder> 
           getStreamOrBuilderList() {
        if (streamBuilder_ != null) {
          return streamBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stream_);
        }
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder addStreamBuilder() {
        return getStreamFieldBuilder().addBuilder(
            org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder addStreamBuilder(
          int index) {
        return getStreamFieldBuilder().addBuilder(
            index, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jchien.twitchbrowser.twitch.StreamEntry stream = 1;</code>
       */
      public java.util.List<org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder> 
           getStreamBuilderList() {
        return getStreamFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder> 
          getStreamFieldBuilder() {
        if (streamBuilder_ == null) {
          streamBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntry.Builder, org.jchien.twitchbrowser.twitch.TwitchBrowserProtos.StreamEntryOrBuilder>(
                  stream_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          stream_ = null;
        }
        return streamBuilder_;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jchien.twitchbrowser.twitch.CacheEntry)
    }

    static {
      defaultInstance = new CacheEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jchien.twitchbrowser.twitch.CacheEntry)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023twitchbrowser.proto\022\037org.jchien.twitch" +
      "browser.twitch\"\243\001\n\013StreamEntry\022\022\n\nnumVie" +
      "wers\030\001 \001(\005\022\025\n\rchannelStatus\030\002 \001(\t\022\032\n\022cha" +
      "nnelDisplayName\030\003 \001(\t\022\020\n\010gameName\030\004 \001(\t\022" +
      "\023\n\013channelName\030\005 \001(\t\022\022\n\nchannelUrl\030\006 \001(\t" +
      "\022\022\n\npreviewUrl\030\007 \001(\t\"]\n\nCacheEntry\022<\n\006st" +
      "ream\030\001 \003(\0132,.org.jchien.twitchbrowser.tw" +
      "itch.StreamEntry\022\021\n\ttimestamp\030\002 \001(\003B6\n\037o" +
      "rg.jchien.twitchbrowser.twitchB\023TwitchBr" +
      "owserProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_jchien_twitchbrowser_twitch_StreamEntry_descriptor,
        new java.lang.String[] { "NumViewers", "ChannelStatus", "ChannelDisplayName", "GameName", "ChannelName", "ChannelUrl", "PreviewUrl", });
    internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_jchien_twitchbrowser_twitch_CacheEntry_descriptor,
        new java.lang.String[] { "Stream", "Timestamp", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
